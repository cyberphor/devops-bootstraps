---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch
spec:
  version: 8.13.2
  nodeSets:
  - name: default
    count: 3
    config:
      node.store.allow_mmap: false
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: kibana
spec:
  version: 8.13.2
  count: 1
  elasticsearchRef:
    name: elasticsearch
  config:
    xpack.fleet.agents.elasticsearch.hosts: ["https://elasticsearch-es-http.default.svc:9200"]
    xpack.fleet.agents.fleet_server.hosts: ["https://fleet-server-agent-http.default.svc:8220"]
    xpack.fleet.packages:
    - name: system
      version: latest
    - name: elastic_agent
      version: latest
    - name: fleet_server
      version: latest
    - name: kubernetes
      version: latest
    - name: apm
      version: latest
    - name: endpoint
      version: latest
    xpack.fleet.agentPolicies:
    - name: Fleet Server Policy
      id: fleet-server
      namespace: default
      monitoring_enabled:
      - logs
      - metrics
      unenroll_timeout: 900
      package_policies:
      - name: fleet_server-1
        id: fleet_server-1
        package:
          name: fleet_server
    - name: Elastic Agent Policy
      id: elastic-agent
      namespace: default
      monitoring_enabled:
      - logs
      - metrics
      unenroll_timeout: 900
      package_policies:
      - name: system-1
        package:
          name: system
      - name: kubernetes-1 
        package:
          name: kubernetes
      - name: apm-1 
        package:
          name: apm
        inputs:
        - type: apm
          keep_enabled: true
          vars:
          - name: host
            value: 0.0.0.0:8200
            frozen: true
          - name: url
            value: "http://0.0.0.0:8200"
            frozen: true
---
apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: fleet-server
spec:
  version: 8.13.2
  kibanaRef:
    name: kibana
  elasticsearchRefs:
  - name: elasticsearch
  mode: fleet
  fleetServerEnabled: true
  policyID: fleet-server
  deployment:
    replicas: 1
    podTemplate:
      spec:
        serviceAccountName: fleet-server
        automountServiceAccountToken: true
        securityContext:
          runAsUser: 0
---
apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata: 
  name: elastic-agent
spec:
  version: 8.13.2
  kibanaRef:
    name: kibana
  fleetServerRef: 
    name: fleet-server
  mode: fleet
  policyID: elastic-agent
  daemonSet:
    podTemplate:
      spec:
        tolerations:
        - key: node-role.kubernetes.io/control-plane
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
        serviceAccountName: elastic-agent
        hostNetwork: true
        hostPID: true
        dnsPolicy: ClusterFirstWithHostNet
        automountServiceAccountToken: true
        securityContext:
          runAsUser: 0
          capabilities:
            add:
            - BPF # (since Linux 5.8) allows loading of BPF programs, create most map types, load BTF, iterate programs and maps.
            - PERFMON # (since Linux 5.8) allows attaching of BPF programs used for performance metrics and observability operations.
            - SYS_RESOURCE # Allow use of special resources or raising of resource limits. Used by 'Defend for Containers' to modify 'rlimit_memlock'
        #containers:
        #  - name: elastic-agent
        #    image: docker.elastic.co/beats/elastic-agent:8.13.2
        #    env:
        #      - name: NODE_NAME
        #        valueFrom:
        #          fieldRef:
        #            fieldPath: spec.nodeName
        #      - name: POD_NAME
        #        valueFrom:
        #          fieldRef:
        #            fieldPath: metadata.name
        #      # Set to 1 for enrollment into Fleet server. If not set, Elastic Agent is run in standalone mode
        #      - name: FLEET_ENROLL
        #        value: "1"
        #      # Set to true to communicate with Fleet with either insecure HTTP or unverified HTTPS
        #      - name: FLEET_INSECURE
        #        value: "false"
        #      # Fleet Server URL to enroll the Elastic Agent into
        #      - name: FLEET_URL
        #        value: "https://fleet-server-agent-http.default.svc:8220"
        #      # Elasticsearch API key used to enroll Elastic Agents in Fleet (https://www.elastic.co/guide/en/fleet/current/fleet-enrollment-tokens.html#fleet-enrollment-tokens)
        #      - name: FLEET_ENROLLMENT_TOKEN
        #        value: "ejBaQWVvOEJSa0hvZHJ4ak9EZlA6akRNbWVneHVTWENmUjJWSjVXUjZNQQ=="
        #      # The following ELASTIC_NETINFO:false variable will disable the netinfo.enabled option of add-host-metadata processor. This will remove fields host.ip and host.mac.
        #      # For more info: https://www.elastic.co/guide/en/beats/metricbeat/current/add-host-metadata.html
        #      - name: ELASTIC_NETINFO
        #        value: "false"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fleet-server
  namespace: default
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elastic-agent
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: elastic-agent
rules:
- apiGroups: [""]
  resources:
  - pods
  - nodes
  - namespaces
  - events
  - services
  - configmaps
  - serviceaccounts
  - persistentvolumes
  - persistentvolumeclaims
  verbs:
  - get
  - watch
  - list
- apiGroups: [""]
  resources:
  - nodes/stats
  verbs:
  - get
- apiGroups: ["apps"]
  resources:
  - statefulsets
  - deployments
  - replicasets
  - daemonsets
  verbs:
  - get
  - list
  - watch
- apiGroups: [ "batch" ]
  resources:
    - jobs
    - cronjobs
  verbs:
  - get
  - list
  - watch
- apiGroups: ["coordination.k8s.io"]
  resources:
  - leases
  verbs:
  - get
  - create
  - update
- nonResourceURLs:
  - "/metrics"
  verbs:
  - get
- apiGroups: ["extensions"]
  resources:
  - replicasets
  verbs: 
  - get
  - list
  - watch
- apiGroups: ["policy"]
  resources:
  - podsecuritypolicies
  verbs:
  - get
  - list
  - watch
- apiGroups: ["rbac.authorization.k8s.io"]
  resources:
  - clusterrolebindings
  - clusterroles
  - rolebindings
  - roles
  verbs: 
  - get
  - list
  - watch
- apiGroups: [ "storage.k8s.io" ]
  resources:
  - storageclasses
  verbs: 
  - get
  - list
  - watch
- nonResourceURLs:
  - "/metrics"
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fleet-server
rules:
- apiGroups: [""]
  resources:
  - pods
  - namespaces
  - nodes
  verbs:
  - get
  - watch
  - list
- apiGroups: ["apps"]
  resources:
  - replicasets
  verbs:
  - get
  - watch
  - list
- apiGroups: ["batch"]
  resources:
  - jobs
  verbs:
  - get
  - watch
  - list
- apiGroups: ["coordination.k8s.io"]
  resources:
  - leases
  verbs:
  - get
  - create
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fleet-server
subjects:
- kind: ServiceAccount
  name: fleet-server
  namespace: default
roleRef:
  kind: ClusterRole
  name: fleet-server
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: elastic-agent
subjects:
- kind: ServiceAccount
  name: elastic-agent
  namespace: default
roleRef:
  kind: ClusterRole
  name: elastic-agent
  apiGroup: rbac.authorization.k8s.io